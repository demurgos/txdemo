name: Check the Rust code

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust-version: ["1.55.0", "nightly"]

    steps:
      - uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust-version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          components: rustfmt, clippy, llvm-tools-preview
          override: true

      - if: ${{ matrix.rust-version != 'nightly'  }}
        name: Build and test (without coverage)
        uses: actions-rs/cargo@v1
        with:
          command: test

      - if: ${{ matrix.rust-version == 'nightly'  }}
        name: Build and test (with coverage)
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          LLVM_PROFILE_FILE: "./target/debug/profile/%p-%m.profraw"
          RUSTFLAGS: "-Zinstrument-coverage"

      - if: ${{ matrix.rust-version == 'nightly'  }}
        name: Install grcov
        run: cargo install grcov

      - if: ${{ matrix.rust-version == 'nightly'  }}
        name: Build code coverage report
        run: grcov ./target/debug/profile/ -s . --binary-path target/debug/ -t lcov --branch --ignore-not-existing -o lcov.info

      - if: ${{ matrix.rust-version == 'nightly'  }}
        name: Upload coverage report to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: "./lcov.info"

      - name: Check code formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Lint the project
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

      - name: Run a security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
